h2 Web Component
:stencilDoc(name='lux-expansion-panel')

h2 JavaScript
h3 Actions
p.-text
  | You can bind actions to activators inside the expansion panel with the <code>data-lux-epanel-action</code> attribute.

table.lux-table.lux-table__options.-bordered
  thead
    tr
      th Action
      th Description
  tbody
    tr
      td
        code(style='word-break: initial') pending
      td
        | Sets the panel to the pending state. All the contents under the <code>-active--only</code> and the
        | <code>-done--only</code> will not be visible.
    tr
      td
        code(style='word-break: initial') active
      td Sets the panel to the active state. All the contents under the <code>-active--only</code> will be visible.
    tr
      td
        code(style='word-break: initial') toggle
      td
        | In the case the panel is previously set to active, this action sets it to pending. It sets to active state
        | otherwise.
    tr
      td
        code(style='word-break: initial') done
      td Sets the panel to the done state. All the contents under the <code>-done--only</code> will be visible.
    tr
      td
        code(style='word-break: initial') disabled
      td
        | Sets the panel to the disabled state. All the contents under the <code>-active--only</code> and the
        | <code>-done--only</code> will not be visible, and the title will render in a soft grey color.
    tr
      td
        code(style='word-break: initial') inactive
      td Is a synonym for <code>pending</code>.
    tr
      td
        code(style='word-break: initial') next
      td Sets the next panel in <code>active</code> status.
    tr
      td
        code(style='word-break: initial') previous
      td Sets the previous panel in <code>active</code> status.

p.-text
  | You can freely add, remove or change the <code>data-lux-epanel-action</code> attribute on the fly, as is the main
  | element with the <code>lux-epanel</code> class, the one which listens for the events.

h3 Preventing memory leaks
p.-text
  | Expansion panel components have a dispose function to free all resources attached to the element, such as event
  | listeners and object data. You should call this method when you want to remove the component.
:code(lang="javascript")
  var elemArray = document.querySelectorAll('[data-lux-epanel-group="groupName"]');
  var expansionPanelsArray = lux.expansionPanel(elemArray);
  // do stuff
  expansionPanelsArray.forEach(function (expansionPanel) {
    expansionPanel.dispose();
  });

p.-text
  | It is safe to call the <code>expansionPanel</code> method more than once, as it will return any previously created
  | expansion panel component associated to the element.
:code(lang="javascript")
  var elem = document.getElementById('expansion-panel-1');
  var expansionPanelComponent = lux.expansionPanel(elem);
  var elem2 = document.getElementById('expansion-panel-1');
  var expansionPanelComponent2 = lux.expansionPanel(elem2);
  expansionPanelComponent === expansionPanelComponent2; // returns true

  expansionPanelComponent.dispose(); // Only have to do it once.