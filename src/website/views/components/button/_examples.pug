h2 Examples
p.-text
  | Lux includes three button variants: Solid, Outline, and Flat. Use <code>solid</code>
  | buttons for high emphasis actions, base or <code>outline</code> buttons for medium
  | emphasis actions, and <code>flat</code> buttons for low emphasis actions.
h3 Solid
.example.-mb--3
  .lux-grid.-no-gutter
    .lux-col.-w--12.-w-md--6
      .-p--3.-d--flex(style="justify-content: center;")
        each type, val in {Base:'', Primary:'primary', Dark:'dark'}
          div.-pr--2
            lux-button(color=type)= val
    .lux-col.-w--12.-w-md--6
      .-p--3.-bg--black.-d--flex(style="justify-content: center;")
        each type, val in {Secondary:'secondary', Light:'light'}
          div.-pr--2
            lux-button(color=type)= val
  .example-tabs.-pl--2
    ul.lux-tabs#examples-default
      li.-active
        a(href=`#webcomponent`) Web Component
      li
        a(href=`#html`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent
    :code(lang="html")
      <!-- For light backgrounds -->
      <lux-button>Base</lux-button>
      <lux-button color="primary">Primary</lux-button>
      <lux-button color="dark">Dark</lux-button>

      <!-- For dark backgrounds -->
      <lux-button color="secondary">Secondary</lux-button>
      <lux-button color="light">Light</lux-button>
  .lux-tabs-panel#html
    .lux-tab__description
      | Lux supports button classes on <code>&lt;button&gt;</code>, <code>&lt;a&gt;</code> and 
      | <code>&lt;input&gt;</code> elements.
    :code(lang="html")
      <!-- For light backgrounds -->
      <button class="lux-button">Base</button>
      <button class="lux-button -primary">Primary</button>
      <button class="lux-button -dark">Dark</button>

      <!-- For dark backgrounds -->
      <button class="lux-button -secondary">Secondary</button>
      <button class="lux-button -light">Light</button>

      <!-- Button classes can be used on other elements -->
      <a class="lux-button -primary" href="#" role="button">Link button</a>
      <input class="lux-button -primary" type="button" value="Input button">
      <input class="lux-button -primary" type="submit" value="Submit button">

h3 Outline
.example.-mb--3
  .lux-grid.-no-gutter
    .lux-col.-w--12.-w-md--6
      .-p--3.-d--flex(style="justify-content: center;")
        each type, val in {Primary:'primary', Dark:'dark'}
          div.-pr--2
            lux-button(color=type, variant='outline')= val
    .lux-col.-w--12.-w-md--6
      .-p--3.-bg--black.-d--flex(style="justify-content: center;")
        each type, val in {Secondary:'secondary', Light:'light'}
          div.-pr--2
            lux-button(color=type, variant='outline')= val
  .example-tabs.-pl--2
    ul.lux-tabs#examples-outline
      li.-active
        a(href=`#webcomponent-outline`) Web Component
      li
        a(href=`#html-outline`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-outline
    :code(lang="html")
      <!-- For light backgrounds -->
      <lux-button color="primary" variant="outline">Primary</lux-button>
      <lux-button color="dark" variant="outline">Dark</lux-button>

      <!-- For dark backgrounds -->
      <lux-button color="secondary" variant="outline">Secondary</lux-button>
      <lux-button color="light" variant="outline">Light</lux-button>
  .lux-tabs-panel#html-outline
    .lux-tab__description
      | Lux supports button classes on <code>&lt;button&gt;</code>, <code>&lt;a&gt;</code> and 
      | <code>&lt;input&gt;</code> elements.
    :code(lang="html")
      <!-- For light backgrounds -->
      <button class="lux-button -primary -outline">Primary</button>
      <button class="lux-button -dark -outline">Dark</button>

      <!-- For dark backgrounds -->
      <button class="lux-button -secondary -outline">Secondary</button>
      <button class="lux-button -light -outline">Light</button>

      <!-- Button classes can be used on other elements -->
      <a class="lux-button -primary -outline" href="#" role="button">Link button</a>
      <input class="lux-button -primary -outline" type="button" value="Input button">
      <input class="lux-button -primary -outline" type="submit" value="Submit button">

h3 Flat
.example.-mb--3
  .lux-grid.-no-gutter
    .lux-col.-w--12.-w-md--6
      .-p--3.-d--flex(style="justify-content: center;")
        each type, val in {Base: '', Primary:'primary', Dark:'dark'}
          div.-pr--2
            lux-button(color=type, variant='flat')= val
    .lux-col.-w--12.-w-md--6
      .-p--3.-bg--black.-d--flex(style="justify-content: center;")
        each type, val in {Secondary:'secondary', Light:'light'}
          div.-pr--2
            lux-button(color=type, variant='flat')= val
  .example-tabs.-pl--2
    ul.lux-tabs#examples-flat
      li.-active
        a(href=`#webcomponent-flat`) Web Component
      li
        a(href=`#html-flat`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-flat
    :code(lang="html")
      <!-- For light backgrounds -->
      <lux-button variant="flat">Base</lux-button>
      <lux-button color="primary" variant="flat">Primary</lux-button>
      <lux-button color="dark" variant="flat">Dark</lux-button>

      <!-- For dark backgrounds -->
      <lux-button color="secondary" variant="flat">Secondary</lux-button>
      <lux-button color="light" variant="flat">Light</lux-button>
  .lux-tabs-panel#html-flat
    .lux-tab__description
      | Lux supports button classes on <code>&lt;button&gt;</code>, <code>&lt;a&gt;</code> and 
      | <code>&lt;input&gt;</code> elements.
    :code(lang="html")
      <!-- For light backgrounds -->
      <button class="lux-button -flat">Base</button>
      <button class="lux-button -primary -flat">Primary</button>
      <button class="lux-button -dark -flat">Dark</button>

      <!-- For dark backgrounds -->
      <button class="lux-button -secondary -flat">Secondary</button>
      <button class="lux-button -light -flat">Light</button>

      <!-- Button classes can be used on other elements -->
      <a class="lux-button -primary -flat" href="#" role="button">Link button</a>
      <input class="lux-button -primary -flat" type="button" value="Input button">
      <input class="lux-button -primary -flat" type="submit" value="Submit button">

h2 Uppercase
p.-text
  | Uppercase buttons style button text with <code>text-transform: uppercase;</code>
  | to further emphasize button text labels and distinguish them from surrounding content.
p.-text
  strong Note: 
  | Uppercase styled text can cause rendering issues in certain locales.
.example.-mb--3
  .-p--3.-d--flex
    .-pr--2
      button(class=`lux-button -uppercase`) Button
    .-pr--2
      button(class=`lux-button -primary -uppercase`) Button
    .-pr--2
      button(class=`lux-button -outline -primary -uppercase`) Button
  .example-tabs.-pl--2
    ul.lux-tabs#examples-uppercase
      li.-active
        a(href=`#webcomponent-uppercase`) Web Component
      li
        a(href=`#html-uppercase`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-uppercase
    :code(lang="html")
      <lux-button uppercase>Button</lux-button>
      <lux-button color="primary" uppercase>Button</lux-button>
      <lux-button color="primary" variant="outline" uppercase>Button</lux-button>
  .lux-tabs-panel#html-uppercase
    :code(lang="html")
      <button class="lux-button -uppercase">Button</button>
      <button class="lux-button -primary -uppercase">Button</button>
      <button class="lux-button -primary -outline -uppercase">Button</button>

h2 Fluid
p.-text
  | Use Fluid buttons to stretch the full width of the parent container.
.example.-mb--3
  .-p--3
    button(class=`lux-button -fluid -mb--2`) Button
    button(class=`lux-button -fluid -justify-content--center`) Button
  .example-tabs.-pl--2
    ul.lux-tabs#examples-fluid
      li.-active
        a(href=`#webcomponent-fluid`) Web Component
      li
        a(href=`#html-fluid`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-fluid
    :code(lang="html")
      <!-- left aligned content -->
      <lux-button fluid>Button</lux-button>

      <!-- center aligned content -->
      <lux-button fluid center>Button</lux-button>
  .lux-tabs-panel#html-fluid
    :code(lang="html")
      <!-- left aligned content -->
      <button class="lux-button -fluid">Button</button>

      <!-- center aligned content -->
      <button class="lux-button -fluid -justify-content--center">Button</button>

h2 Icon buttons
p.-text
  | For interfaces with limited space, an Icon button can
  | be used for common actions such as editing, deleting, closing, etc.
.example.-mb--3
  .-p--3
    lux-button(type='icon', alternative-text="Button action")
      lux-icon(icon='atom')
    lux-button.-ml--2(variant='flat', type='icon', alternative-text="Button action")
      lux-icon(icon='atom')
  .example-tabs.-pl--2
    ul.lux-tabs#examples-icon
      li.-active
        a(href=`#webcomponent-icon`) Web Component
      li
        a(href=`#html-icon`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-icon
    :code(lang="html")
      <!-- base -->
      <lux-button type="icon" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>

      <!-- flat -->
      <lux-button variant="flat" type="icon" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
  .lux-tabs-panel#html-icon
    :code(lang="html")
      <!-- base -->
      <button class="lux-button -icon" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- flat -->
      <button class="lux-button -icon -flat" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

h3 Labeled icon buttons
.example.-mb--3
  .-p--3
    lux-button
      lux-icon(icon='atom')
      span Button
    lux-button.-mr--2.-ml--2()
      span Button
      lux-icon(icon='atom')
    lux-button
      lux-icon(icon='atom')
      span Button
      lux-icon(icon='atom')
  .example-tabs.-pl--2
    ul.lux-tabs#examples-labeled
      li.-active
        a(href=`#webcomponent-labeled`) Web Component
      li
        a(href=`#html-labeled`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-labeled
    :code(lang="html")
      <!-- left aligned -->
      <lux-button>
        <lux-icon icon="atom"></lux-icon>
        <span>Button</span>
      </lux-button>

      <!-- right aligned -->
      <lux-button>
        <span>Button</span>
        <lux-icon icon="atom"></lux-icon>
      </lux-button>

      <!-- both sides -->
      <lux-button>
        <lux-icon icon="atom"></lux-icon>
        <span>Button</span>
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
  .lux-tabs-panel#html-labeled
    :code(lang="html")
      <!-- left aligned -->
      <button class="lux-button">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
          <span>Button</span>
        </div>
      </button>

      <!-- right aligned -->
      <button class="lux-button">
        <div class="lux-button__content">
          <span>Button</span>
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- both sides -->
      <button class="lux-button">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
          <span>Button</span>
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

h3 Floating icon buttons
.example.-mb--3
  .lux-grid.-no-gutter
    .lux-col.-w--12.-w-md--6
      .-p--3.-d--flex(style="justify-content: center;")
        each type, val in {Base:'', Primary:'primary', Dark:'dark'}
          div.-pr--2
            lux-button(color=type, type='float', alternative-text="Button action")
              lux-icon(icon='atom')
    .lux-col.-w--12.-w-md--6
      .-p--3.-bg--black.-d--flex(style="justify-content: center;")
        each type, val in {Secondary:'secondary', Light:'light'}
          div.-pr--2
            lux-button(color=type, type='float', alternative-text="Button action")
              lux-icon(icon='atom')
  .example-tabs.-pl--2
    ul.lux-tabs#examples-floating-icon
      li.-active
        a(href=`#webcomponent-floating-icon`) Web Component
      li
        a(href=`#html-floating-icon`) HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-floating-icon
    :code(lang="html")
      <!-- For light backgrounds -->
      <lux-button type="float" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
      <lux-button type="float" color="primary" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
      <lux-button type="float" color="dark" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>

      <!-- For dark backgrounds -->
      <lux-button type="float" color="secondary" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
      <lux-button type="float" color="light" alternative-text="Button action">
        <lux-icon icon="atom"></lux-icon>
      </lux-button>
  .lux-tabs-panel#html-floating-icon
    :code(lang="html")
      <!-- For light backgrounds -->
      <button class="lux-button -float" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>
      <button class="lux-button -primary -float" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>
      <button class="lux-button -dark -float" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- For dark backgrounds -->
      <button class="lux-button -secondary -float" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>
      <button class="lux-button -light -float" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

h3 Close icon button
.example.-mb--3
  .-p--3
    lux-button(type='close')
  .example-tabs.-pl--2
    ul.lux-tabs#examples-close-button
      li.-active
        a(href=`#webcomponent-close-button`) Web Component
      li
        a(href='#html-close-button') HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-close-button
    :code(lang="html")
      <lux-button type="close"></lux-button>
  .lux-tabs-panel#html-close-button
    :code(lang="html")
      <button class="lux-button -icon -close" aria-label="Close">
        <div class="lux-button__content">
          <i class="lux-icon icon-x"></i>
        </div>
      </button>

h2 Danger
p.-text
  | For special cases, such as styling a destructive action in an application (e.g. Delete Account),
  | a Danger button may be used.
.example.-mb--3
  .-p--3
      lux-button.-mr--2(color='danger')= 'Danger'
      lux-button.-mr--2(variant='outline', color='danger')= 'Danger'
      lux-button(variant='flat', color='danger')= 'Danger'
  .example-tabs.-pl--2
    ul.lux-tabs#examples-danger
      li.-active
        a(href=`#webcomponent-danger`) Web Component
      li
        a(href='#html-danger') HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-danger
    :code(lang="html")
      <lux-button color="danger">Danger</lux-button>
      <lux-button color="danger" variant="outline">Danger</lux-button>
      <lux-button color="danger" variant="flat">Danger</lux-button>
  .lux-tabs-panel#html-danger
    :code(lang="html")
      <button class="lux-button -danger">Danger</button>
      <button class="lux-button -danger -outline">Danger</button>
      <button class="lux-button -danger -flat">Danger</button>

h2 Sizes
p.-text
  | Buttons support the following sizes: Small (sm), Medium (md), Large (lg), and Extra Large (xl).
.example.-mb--3
  .-p--3
    each size in ['sm', 'md', 'lg', 'xl']
      p.-text--bold.-pl--2= size
      div(class=`lux-col -w--12 -pb--2 -mr--0 -d--flex`)
        lux-button(size=size)= 'Button'
        lux-button.-ml--2(size=size, type='icon', alternative-text="Button action")
          lux-icon(icon='atom')
  .example-tabs.-pl--2
    ul.lux-tabs#examples-sizes
      li.-active
        a(href=`#webcomponent-sizes`) Web Component
      li
        a(href='#html-sizes') HTML Blueprint
  .lux-tabs-panel.-active#webcomponent-sizes
    :code(lang="html")
      <!-- sm -->
      <lux-button size="sm">Button</lux-button>
      <lux-button type="icon" size="sm" alternative-text="Button action">
        <lux-icon icon="atom" />
      </lux-button>

      <!-- md -->
      <lux-button size="md">Button</lux-button>
      <lux-button type="icon" size="md" alternative-text="Button action">
        <lux-icon icon="atom" />
      </lux-button>

      <!-- lg -->
      <lux-button size="lg">Button</lux-button>
      <lux-button type="icon" size="lg" alternative-text="Button action">
        <lux-icon icon="atom" />
      </lux-button>

      <!-- xl -->
      <lux-button size="xl">Button</lux-button>
      <lux-button type="icon" size="xl" alternative-text="Button action">
        <lux-icon icon="atom" />
      </lux-button>
  .lux-tabs-panel#html-sizes
    :code(lang="html")
      <!-- sm -->
      <button class="lux-button -sm">Button</button>
      <button class="lux-button -sm -icon" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- md -->
      <button class="lux-button -md">Button</button>
      <button class="lux-button -md -icon" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- lg -->
      <button class="lux-button -lg">Button</button>
      <button class="lux-button -lg -icon" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

      <!-- xl -->
      <button class="lux-button -xl">Button</button>
      <button class="lux-button -xl -icon" aria-label="Button action">
        <div class="lux-button__content">
          <i class="lux-icon icon-atom"></i>
        </div>
      </button>

script.
  document.addEventListener(
    'DOMContentLoaded',
    function() {
      lux.tab(document.querySelectorAll('.lux-tabs-panel .lux-tabs'));
    }
  );
